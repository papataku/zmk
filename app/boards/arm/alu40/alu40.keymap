/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define BT(n) BT_SEL n

#define JISKEY 0
#define USKEY 1
#define LOWER 2
#define RAISE 3
#define USRAI 4
#define FUNC1 5
#define FUNC2 6
#define ADJUS 7



#define __________	&trans
#define XXXXXXXXXX	&none

/* for JIS */
#define LO_MUHE		&lt LOWER INT_MUHENKAN
#define RA_HENK		&lt RAISE INT_HENKAN
/* for US */
#define LO_US		&lt LOWER LANG2
#define RA_US		&lt USRAI LANG1

#define ESC_ADJ 	&lt ADJUS ESC
#define ASCRN		&kp LA(PSCRN)
#define TEAM_EDIT	&kp LS(LG(X))



#define J_YEN		INT_YEN		// ¥

#define J_EXCL		LS(N1)		// !
#define J_AT		LBKT		// @
#define J_HASH		LS(N3)		// #
#define J_DLLR		LS(N4)		// $
#define J_PRCN		LS(N5)		// %
#define J_CARE		EQUAL		// ^
#define J_AMPS		LS(N6)		// &
#define J_ASTR		LS(SQT)		// *
#define J_LPAR		LS(N8)		// (
#define J_RPAR		LS(N9)		// )

#define J_EQL		LS(MINUS)	// =
#define J_LBRC		LS(RBKT)	// {
#define J_RBRC		LS(NUHS)	// }
#define J_SQT		LS(N7)		// '
#define J_BSLH		INT1		// (backslash)
#define J_PIPE		LS(INT3)	// |
#define J_PLUS		LS(SEMI)	// +
#define J_UNDE		LS(INT1)	// _
#define J_LBKT		RBKT		// [
#define J_RBKT		NUHS		// ]
#define J_DQT		LS(N2)		// "

#define J_COLN		SQT			// :

&lt {  // layer-tap config
    flavor = "hold-preferred";
    tapping-term-ms = <20>;
    retro-tap;
};

/ {
    behaviors {

        scoln: mod_morph_scoln {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_MORPH_SCOLN";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp J_COLN>; // [sft ;] ─› [JP :]
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
    
    macros {
        q_key: q_list_key {
            label = "q_list_key";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&kp N1>,
                <&kp Q>,
                <&kp A>,
                <&kp Z>;
        };
        w_key: w_list_key {
            label = "w_list_key";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&kp N2>,
                <&kp W>,
                <&kp S>,
                <&kp X>;
        };
        e_key: e_list_key {
            label = "e_list_key";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&kp N3>,
                <&kp E>,
                <&kp D>,
                <&kp C>;
        };
        r_key: r_list_key {
            label = "r_list_key";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_tap>,
                <&kp N4>,
                <&macro_tap>,
                <&kp R>,
                <&macro_tap>,
                <&kp F>,
                <&macro_tap>,
                <&kp V>;
        };
        hex_key: hex_key {
            label = "hex_key";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_tap>,
                <&kp N0>,
                <&macro_tap>,
                <&kp X>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB   |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // | ESC/AD|  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   | ENTER |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |  UP   | /     |
            // | LCTL  | LGUI | LALT | FUNC2| LOWR |     SPACE    |  RAIS | FUNC1| LEFT | DOWN  | RIGHT |

            bindings = <
                &kp TAB    &kp Q      &kp W     &kp E     &kp R    &kp T      &kp Y      &kp U    &kp I      &kp O    &kp P     &kp BSPC
                ESC_ADJ    &kp A      &kp S     &kp D     &kp F    &kp G      &kp H      &kp J    &kp K      &kp L    &scoln    &kp RET
                &kp LSHFT  &kp Z      &kp X     &kp C     &kp V    &kp B      &kp N      &kp M    &kp COMMA  &kp DOT  &kp UP    &kp FSLH
                &kp LCTRL  &kp LGUI   &kp LALT  &mo FUNC2 LO_MUHE  &kp SPACE  &kp SPACE  RA_HENK  &mo FUNC1  &kp LEFT &kp DOWN  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        us_key {
            // -----------------------------------------------------------------------------------------
            // | TAB   |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // | ESC/AD|  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   | ENTER |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |  UP   | /     |
            // | LCTL  | LGUI | LALT | FUNC2| LOWR |     SPACE    |  RAIS | FUNC1| LEFT | DOWN  | RIGHT |

            bindings = <
                &kp TAB    &kp Q      &kp W     &kp E     &kp R    &kp T      &kp Y      &kp U    &kp I      &kp O    &kp P     &kp BSPC
                ESC_ADJ    &kp A      &kp S     &kp D     &kp F    &kp G      &kp H      &kp J    &kp K      &kp L    &kp SEMI  &kp RET
                &kp LSHFT  &kp Z      &kp X     &kp C     &kp V    &kp B      &kp N      &kp M    &kp COMMA  &kp DOT  &kp UP    &kp FSLH
                &kp LCTRL  &kp LGUI   &kp LALT  &mo FUNC2 LO_US    &kp SPACE  &kp SPACE  RA_US    &mo FUNC1  &kp LEFT &kp DOWN  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower {
            bindings = <
				&trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp N7     &kp N8     &kp N9     &trans     &trans
				&trans     &trans     ASCRN      &trans     &kp LC(T)  &trans     &trans     &kp N4     &kp N5     &kp N6     &trans     &trans
				&trans     &trans     &kp DEL    &kp BSPC   &kp RET    &trans     &trans     &kp N1     &kp N2     &kp N3     &trans     &trans
                &trans     &trans     &trans     &trans     XXXXXXXXXX &trans     &trans     &kp N0     &kp DOT    &kp COMMA  &hex_key
                   &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        raise {
            bindings = <
				&kp GRAVE  &kp J_EXCL &kp J_AT   &kp J_HASH &kp J_DLLR &kp J_PRCN &kp J_CARE &kp J_AMPS &kp J_ASTR &kp J_LPAR &kp J_RPAR &kp J_BSLH
				&kp TILDE  &trans     &trans     &trans     &trans     &trans     &kp J_EQL  &kp MINUS  &kp J_LBRC &kp J_RBRC &kp J_SQT  &kp J_PIPE
				&trans     &trans     &trans     &trans     &trans     &trans     &kp J_PLUS &kp J_UNDE &kp J_LBKT &kp J_RBKT &kp J_DQT  &trans
                &trans     &trans     &trans     &trans     &trans     &trans     &trans     XXXXXXXXXX &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

        us_rai {
            bindings = <
				&kp GRAVE  &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT  &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR   &kp BSLH
				&kp TILDE  &trans     &trans     &trans     &trans     &trans     &kp EQL    &kp MINUS  &kp LBRC   &kp RBRC   &kp SQT    &kp PIPE
				&trans     &trans     &trans     &trans     &trans     &trans     &kp PLUS   &kp UNDER  &kp LBKT   &kp RBKT   &kp DQT    &trans
                &trans     &trans     &trans     &trans     &trans     &trans     &trans     XXXXXXXXXX &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

		func1 {
			// -------------------------------------------------------------------------------------------------------------------------------------
			// |          |          |          |          |          |          |          |          |          |          |          |          |
			bindings = <
				&trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp DEL
				&trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp PG_UP  &kp PG_DN  &trans     &trans
				&trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &kp HOME   &kp END    &trans     &trans
                &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     XXXXXXXXXX &trans     &trans     &trans
			>;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
		};

		func2 {
			// -------------------------------------------------------------------------------------------------------------------------------------
			// |          |          |          |          |          |          |          |          |          |          |          |          |
			bindings = <
				&trans     &kp F1     &kp F2     &kp F3     &kp F4     &kp F5     &trans     &trans     &trans     &trans     &trans     &trans
				&trans     &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &trans     &trans     &trans     &trans     &trans     &trans
				&trans     &kp F11    &kp F12    &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans
                &trans     &trans     &trans     XXXXXXXXXX &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans
			>;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
		};

        adjust {
            bindings = <
            // -------------------------------------------------------------------------------------------------------------------------------------
			// |          |          |          |          |          |          |          |          |          |          |          |          |

                &trans     &q_key     &w_key     &e_key     &r_key     &trans     &trans     &to USKEY  &trans     &trans     &trans     &bootloader
                &trans     &bt BT(0)  &bt BT(1)  &bt BT(2)  &bt BT(3)  &bt BT(4)  &bt BT_CLR &to JISKEY &trans     &trans     &trans     &sys_reset
                &trans     &rgb_ug RGB_TOG &trans &trans    &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans
                &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };
    };
};
